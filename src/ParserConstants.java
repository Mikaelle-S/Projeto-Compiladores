/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 7;
  /** RegularExpression Id. */
  int PUBLIC = 8;
  /** RegularExpression Id. */
  int STATIC = 9;
  /** RegularExpression Id. */
  int VOID = 10;
  /** RegularExpression Id. */
  int MAIN = 11;
  /** RegularExpression Id. */
  int STRING = 12;
  /** RegularExpression Id. */
  int EXTENDS = 13;
  /** RegularExpression Id. */
  int RETURN = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int WHILE = 17;
  /** RegularExpression Id. */
  int TRUE = 18;
  /** RegularExpression Id. */
  int FALSE = 19;
  /** RegularExpression Id. */
  int THIS = 20;
  /** RegularExpression Id. */
  int NEW = 21;
  /** RegularExpression Id. */
  int INT = 22;
  /** RegularExpression Id. */
  int BOOLEAN = 23;
  /** RegularExpression Id. */
  int LENGTH = 24;
  /** RegularExpression Id. */
  int MAIS = 25;
  /** RegularExpression Id. */
  int MENOS = 26;
  /** RegularExpression Id. */
  int MULTIPLICAR = 27;
  /** RegularExpression Id. */
  int MENOR = 28;
  /** RegularExpression Id. */
  int OP_AND = 29;
  /** RegularExpression Id. */
  int OP_NOT = 30;
  /** RegularExpression Id. */
  int IGUAL = 31;
  /** RegularExpression Id. */
  int PV = 32;
  /** RegularExpression Id. */
  int AP = 33;
  /** RegularExpression Id. */
  int FP = 34;
  /** RegularExpression Id. */
  int AC = 35;
  /** RegularExpression Id. */
  int FC = 36;
  /** RegularExpression Id. */
  int ACO = 37;
  /** RegularExpression Id. */
  int FCO = 38;
  /** RegularExpression Id. */
  int PONTO = 39;
  /** RegularExpression Id. */
  int VIRGULA = 40;
  /** RegularExpression Id. */
  int SYSTEM_OUT_PRINTLN = 41;
  /** RegularExpression Id. */
  int LETTER = 42;
  /** RegularExpression Id. */
  int ID = 43;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"extends\"",
    "\"return\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"int\"",
    "\"boolean\"",
    "\"length\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"<\"",
    "\"&&\"",
    "\"!\"",
    "\"=\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\"System.out.println\"",
    "<LETTER>",
    "<ID>",
    "<INTEGER_LITERAL>",
  };

}
